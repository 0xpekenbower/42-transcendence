// "use client";

// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: J4747 (https://sketchfab.com/J4747)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/sci-fi-pedestal-1c510c2da66446f3931e06b2644b818f
// Title: Sci-fi Pedestal
// */
// import React, { FC, useRef } from 'react'
// import { useGLTF } from '@react-three/drei'
// import { GroupProps, useFrame } from "@react-three/fiber";
// import * as THREE from "three"; // Import Three.js types
// import { Material } from 'three';

// const Scene: FC<GroupProps> = (props) => {
//     const { nodes, materials } = useGLTF('/pedestal.glb');
//     const groupRef = useRef<THREE.Group>(null!);
//     const groupRef2 = useRef<THREE.Group>(null!);
//     const groupRef3 = useRef<THREE.Group>(null!);
//     // position={[5, -15, 40]}
    
//     useFrame(() => {
//         groupRef3.current.position.set(0, 0, 0);
//         if (groupRef3.current) {
//             groupRef3.current.rotation.y += 0.03; // Adjust speed if needed
//         }
//     });

//     // Material
//     return (
//         <group {...props} ref={groupRef as any} dispose={null}>
//             <group ref={groupRef2 as any} dispose={null}>
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_8 as any).geometry}
//                     material={materials.Material}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_9 as any).geometry}
//                     material={materials['Material.001']}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_10 as any).geometry}
//                     material={materials['Material.002']}
//                 />
//             </group>
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_4 as any).geometry}
//                     material={materials.Material}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_6 as any).geometry}
//                     material={materials['Material.002']}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_12 as any).geometry}
//                     material={materials['Material.003']}
//                     position={[0, -2.37949085, -10.5]}
//                 />
//             <group ref={groupRef3 as any} dispose={null}>
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_5 as any).geometry}
//                     material={materials['Material.001']}
//                 />
//             </group>
//         </group>
//     )
// }

// useGLTF.preload('/pedestal.glb');
// export default Scene;

// import React, { FC, useRef } from "react";
// import { useGLTF } from "@react-three/drei";
// import { GroupProps, useFrame } from "@react-three/fiber";
// import * as THREE from "three";

// const Scene: FC<GroupProps> = (props) => {
//     const { nodes, materials } = useGLTF("/pedestal.glb");
//     const groupRef = useRef<THREE.Group>(null!);
//     const pivotRef = useRef<THREE.Group>(null!); // New pivot group
//     const groupRef3 = useRef<THREE.Group>(null!);

//     // Rotating pivotRef instead of groupRef3
//     useFrame(() => {
//         if (pivotRef.current) {
//             pivotRef.current.rotation.y += 0.03; // Adjust speed if needed
//         }
//     });

//     return (
//         <group {...props} ref={groupRef} dispose={null}>
//             <group dispose={null}>
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_8 as any).geometry}
//                     material={materials.Material}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_9 as any).geometry}
//                     material={materials["Material.001"]}
//                 />
//                 <mesh
//                     castShadow
//                     receiveShadow
//                     geometry={(nodes.Object_10 as any).geometry}
//                     material={materials["Material.002"]}
//                 />
//             </group>

//             <mesh
//                 castShadow
//                 receiveShadow
//                 geometry={(nodes.Object_4 as any).geometry}
//                 material={materials.Material}
//             />
//             <mesh
//                 castShadow
//                 receiveShadow
//                 geometry={(nodes.Object_6 as any).geometry}
//                 material={materials["Material.002"]}
//             />
//             <mesh
//                 castShadow
//                 receiveShadow
//                 geometry={(nodes.Object_12 as any).geometry}
//                 material={materials["Material.003"]}
//                 // position={[0, -2.37949085, -10.5]}
//             />

//             {/* Pivot Group for Correct Rotation */}
//             <group ref={pivotRef} position={[0, 0, 0]} dispose={null}>
//                 {/* <group ref={groupRef3}> */}
//                     <mesh
//                         castShadow
//                         receiveShadow
//                         geometry={(nodes.Object_5 as any).geometry}
//                         material={materials["Material.001"]}
//                     />
//                 {/* </group> */}
//             </group>
//         </group>
//     );
// };

// useGLTF.preload("/pedestal.glb");
// export default Scene;


"use client";

import React, { FC, useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { GroupProps, useFrame } from "@react-three/fiber";
import * as THREE from "three";

const Scene: FC<GroupProps> = (props) => {
  const { nodes, materials } = useGLTF("/pedestal.glb") as any;
  const groupRef = useRef<THREE.Group>(null!);


  // useFrame(() => {
  //   if (groupRef3.current) {
  //     groupRef3.current.rotation.y += 0.03; // Smooth rotation in place
  //   }
  // });

  return (
    <group {...props} ref={groupRef as any} dispose={null} position={[0, 1, 0]}>
      <group>
        <mesh castShadow receiveShadow geometry={nodes.Object_8.geometry} material={materials.Material} />
        <mesh castShadow receiveShadow geometry={nodes.Object_9.geometry} material={materials["Material.001"]} />
        <mesh castShadow receiveShadow geometry={nodes.Object_10.geometry} material={materials["Material.002"]} />
      </group>
      <mesh castShadow receiveShadow geometry={nodes.Object_4.geometry} material={materials.Material} />
      <mesh castShadow receiveShadow geometry={nodes.Object_6.geometry} material={materials["Material.002"]} />
      <mesh castShadow receiveShadow geometry={nodes.Object_12.geometry} material={materials["Material.003"]} />
     <mesh castShadow receiveShadow geometry={nodes.Object_5.geometry} material={materials["Material.001"]} />
    </group>
  );
};

useGLTF.preload("/pedestal.glb");
export default Scene;

